{"ast":null,"code":"var _jsxFileName = \"/Users/bc/Documents/box/src/components/BoxBreathing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box } from '@mui/material';\nimport Controls from './Controls';\nimport BoxComponent from './Box';\nimport Summary from './Summary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoxBreathing = () => {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [duration, setDuration] = useState(4);\n  const [theme, setTheme] = useState('default');\n  const [music, setMusic] = useState('none');\n  const [breathCount, setBreathCount] = useState(0);\n  const [showSummary, setShowSummary] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const startTimeRef = useRef(null);\n  const pauseTimeRef = useRef(null);\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      setStartTime(performance.now());\n      startTimeRef.current = performance.now();\n    } else {\n      setStartTime(null);\n    }\n  }, [isRunning, isPaused]);\n  const handleStart = () => {\n    if (isPaused) {\n      const now = performance.now();\n      setStartTime(now - pauseTimeRef.current);\n      startTimeRef.current = now - pauseTimeRef.current;\n      setIsPaused(false);\n    } else {\n      setStartTime(performance.now());\n      startTimeRef.current = performance.now();\n      setBreathCount(0);\n    }\n    setIsRunning(true);\n    setShowSummary(false); // Hide summary when starting\n  };\n  const handlePause = () => {\n    pauseTimeRef.current = performance.now() - startTimeRef.current;\n    setIsPaused(true);\n  };\n  const handleStop = () => {\n    if (isRunning || isPaused) {\n      setIsRunning(false);\n      setIsPaused(false);\n      setTotalTime(Math.floor((performance.now() - startTimeRef.current) / 1000));\n      setStartTime(null);\n      startTimeRef.current = null;\n      setShowSummary(true); // Show summary only when stopping\n      setDuration(prevDuration => prevDuration);\n    }\n  };\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n    // Implement actual audio muting here\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(BoxComponent, {\n      isRunning: isRunning,\n      duration: duration,\n      theme: theme,\n      startTime: startTime\n    }, startTime, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      isRunning: isRunning,\n      isPaused: isPaused,\n      isMuted: isMuted,\n      onStart: handleStart,\n      onPause: handlePause,\n      onStop: handleStop,\n      onMute: handleMute,\n      duration: duration,\n      setDuration: setDuration,\n      theme: theme,\n      setTheme: setTheme,\n      music: music,\n      setMusic: setMusic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), showSummary && /*#__PURE__*/_jsxDEV(Summary, {\n      totalTime: totalTime,\n      breathCount: breathCount,\n      onClose: () => setShowSummary(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(BoxBreathing, \"n2GzKWoGA3aoYA+xrzLTpAIkxfU=\");\n_c = BoxBreathing;\nexport default BoxBreathing;\nvar _c;\n$RefreshReg$(_c, \"BoxBreathing\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Controls","BoxComponent","Summary","jsxDEV","_jsxDEV","BoxBreathing","_s","isRunning","setIsRunning","isPaused","setIsPaused","isMuted","setIsMuted","duration","setDuration","theme","setTheme","music","setMusic","breathCount","setBreathCount","showSummary","setShowSummary","totalTime","setTotalTime","startTime","setStartTime","startTimeRef","pauseTimeRef","performance","now","current","handleStart","handlePause","handleStop","Math","floor","prevDuration","handleMute","sx","display","flexDirection","alignItems","gap","children","fileName","_jsxFileName","lineNumber","columnNumber","onStart","onPause","onStop","onMute","onClose","_c","$RefreshReg$"],"sources":["/Users/bc/Documents/box/src/components/BoxBreathing.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Box } from '@mui/material';\nimport Controls from './Controls';\nimport BoxComponent from './Box';\nimport Summary from './Summary';\n\nconst BoxBreathing = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [duration, setDuration] = useState(4);\n  const [theme, setTheme] = useState('default');\n  const [music, setMusic] = useState('none');\n  const [breathCount, setBreathCount] = useState(0);\n  const [showSummary, setShowSummary] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n\n  const startTimeRef = useRef(null);\n  const pauseTimeRef = useRef(null);\n\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      setStartTime(performance.now());\n      startTimeRef.current = performance.now();\n    } else {\n      setStartTime(null);\n    }\n  }, [isRunning, isPaused]);\n\n  const handleStart = () => {\n    if (isPaused) {\n      const now = performance.now();\n      setStartTime(now - pauseTimeRef.current);\n      startTimeRef.current = now - pauseTimeRef.current;\n      setIsPaused(false);\n    } else {\n      setStartTime(performance.now());\n      startTimeRef.current = performance.now();\n      setBreathCount(0);\n    }\n    setIsRunning(true);\n    setShowSummary(false); // Hide summary when starting\n  };\n\n  const handlePause = () => {\n    pauseTimeRef.current = performance.now() - startTimeRef.current;\n    setIsPaused(true);\n  };\n\n  const handleStop = () => {\n    if (isRunning || isPaused) {\n      setIsRunning(false);\n      setIsPaused(false);\n      setTotalTime(Math.floor((performance.now() - startTimeRef.current) / 1000));\n      setStartTime(null);\n      startTimeRef.current = null;\n      setShowSummary(true); // Show summary only when stopping\n      setDuration(prevDuration => prevDuration);\n    }\n  };\n\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n    // Implement actual audio muting here\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n      <BoxComponent\n        isRunning={isRunning}\n        duration={duration}\n        theme={theme}\n        startTime={startTime}\n        key={startTime}\n      />\n      <Controls\n        isRunning={isRunning}\n        isPaused={isPaused}\n        isMuted={isMuted}\n        onStart={handleStart}\n        onPause={handlePause}\n        onStop={handleStop}\n        onMute={handleMute}\n        duration={duration}\n        setDuration={setDuration}\n        theme={theme}\n        setTheme={setTheme}\n        music={music}\n        setMusic={setMusic}\n      />\n      {showSummary && (\n        <Summary\n          totalTime={totalTime}\n          breathCount={breathCount}\n          onClose={() => setShowSummary(false)}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default BoxBreathing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}