{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Box}from'@mui/material';import Controls from'./Controls';import BoxComponent from'./Box';import Summary from'./Summary';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BoxBreathing=()=>{const[isRunning,setIsRunning]=useState(false);const[isPaused,setIsPaused]=useState(false);const[isMuted,setIsMuted]=useState(false);const[duration,setDuration]=useState(4);const[theme,setTheme]=useState('default');const[music,setMusic]=useState('none');const[breathCount,setBreathCount]=useState(0);const[showSummary,setShowSummary]=useState(false);const[totalTime,setTotalTime]=useState(0);const[startTime,setStartTime]=useState(null);const[isReady,setIsReady]=useState(false);const startTimeRef=useRef(null);const pauseTimeRef=useRef(null);const cycleCountRef=useRef(0);useEffect(()=>{if(isRunning&&!isPaused){setIsReady(true);const timer=setTimeout(()=>{setIsReady(false);setStartTime(performance.now());startTimeRef.current=performance.now();},2500);// Increased to 2.5 seconds (1 second fade in, 1.5 seconds display)\nreturn()=>clearTimeout(timer);}else{setStartTime(null);setIsReady(false);}},[isRunning,isPaused]);useEffect(()=>{if(isRunning&&!isPaused){const intervalId=setInterval(()=>{cycleCountRef.current+=1;if(cycleCountRef.current%4===0){setBreathCount(prevCount=>prevCount+1);}},duration*1000);return()=>clearInterval(intervalId);}},[isRunning,isPaused,duration]);const handleStart=()=>{if(isPaused){const now=performance.now();setStartTime(now-pauseTimeRef.current);startTimeRef.current=now-pauseTimeRef.current;setIsPaused(false);}else{setIsReady(true);setTimeout(()=>{setIsReady(false);setStartTime(performance.now());startTimeRef.current=performance.now();},2500);// Increased to 2.5 seconds\ncycleCountRef.current=0;setBreathCount(0);}setIsRunning(true);setShowSummary(false);};const handlePause=()=>{pauseTimeRef.current=performance.now()-startTimeRef.current;setIsPaused(true);};const handleStop=()=>{if(isRunning||isPaused){setIsRunning(false);setIsPaused(false);setTotalTime(Math.floor((performance.now()-startTimeRef.current)/1000));setStartTime(null);startTimeRef.current=null;setShowSummary(true);setDuration(prevDuration=>prevDuration);}};const handleMute=()=>{setIsMuted(!isMuted);// Implement actual audio muting here\n};return/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',flexDirection:'column',alignItems:'center',gap:2},children:[/*#__PURE__*/_jsx(BoxComponent,{isRunning:isRunning,duration:duration,theme:theme,startTime:startTime,isReady:isReady},startTime),/*#__PURE__*/_jsx(Controls,{isRunning:isRunning,isPaused:isPaused,isMuted:isMuted,onStart:handleStart,onPause:handlePause,onStop:handleStop,onMute:handleMute,duration:duration,setDuration:setDuration,theme:theme,setTheme:setTheme,music:music,setMusic:setMusic}),showSummary&&/*#__PURE__*/_jsx(Summary,{totalTime:totalTime,breathCount:breathCount,onClose:()=>setShowSummary(false)})]});};export default BoxBreathing;","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Controls","BoxComponent","Summary","jsx","_jsx","jsxs","_jsxs","BoxBreathing","isRunning","setIsRunning","isPaused","setIsPaused","isMuted","setIsMuted","duration","setDuration","theme","setTheme","music","setMusic","breathCount","setBreathCount","showSummary","setShowSummary","totalTime","setTotalTime","startTime","setStartTime","isReady","setIsReady","startTimeRef","pauseTimeRef","cycleCountRef","timer","setTimeout","performance","now","current","clearTimeout","intervalId","setInterval","prevCount","clearInterval","handleStart","handlePause","handleStop","Math","floor","prevDuration","handleMute","sx","display","flexDirection","alignItems","gap","children","onStart","onPause","onStop","onMute","onClose"],"sources":["/Users/bc/Documents/box/src/components/BoxBreathing.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Box } from '@mui/material';\nimport Controls from './Controls';\nimport BoxComponent from './Box';\nimport Summary from './Summary';\n\nconst BoxBreathing = () => {\n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const [duration, setDuration] = useState(4);\n  const [theme, setTheme] = useState('default');\n  const [music, setMusic] = useState('none');\n  const [breathCount, setBreathCount] = useState(0);\n  const [showSummary, setShowSummary] = useState(false);\n  const [totalTime, setTotalTime] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [isReady, setIsReady] = useState(false);\n\n  const startTimeRef = useRef(null);\n  const pauseTimeRef = useRef(null);\n  const cycleCountRef = useRef(0);\n\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      setIsReady(true);\n      const timer = setTimeout(() => {\n        setIsReady(false);\n        setStartTime(performance.now());\n        startTimeRef.current = performance.now();\n      }, 2500); // Increased to 2.5 seconds (1 second fade in, 1.5 seconds display)\n      return () => clearTimeout(timer);\n    } else {\n      setStartTime(null);\n      setIsReady(false);\n    }\n  }, [isRunning, isPaused]);\n\n  useEffect(() => {\n    if (isRunning && !isPaused) {\n      const intervalId = setInterval(() => {\n        cycleCountRef.current += 1;\n        if (cycleCountRef.current % 4 === 0) {\n          setBreathCount(prevCount => prevCount + 1);\n        }\n      }, duration * 1000);\n      return () => clearInterval(intervalId);\n    }\n  }, [isRunning, isPaused, duration]);\n\n  const handleStart = () => {\n    if (isPaused) {\n      const now = performance.now();\n      setStartTime(now - pauseTimeRef.current);\n      startTimeRef.current = now - pauseTimeRef.current;\n      setIsPaused(false);\n    } else {\n      setIsReady(true);\n      setTimeout(() => {\n        setIsReady(false);\n        setStartTime(performance.now());\n        startTimeRef.current = performance.now();\n      }, 2500); // Increased to 2.5 seconds\n      cycleCountRef.current = 0;\n      setBreathCount(0);\n    }\n    setIsRunning(true);\n    setShowSummary(false);\n  };\n\n  const handlePause = () => {\n    pauseTimeRef.current = performance.now() - startTimeRef.current;\n    setIsPaused(true);\n  };\n\n  const handleStop = () => {\n    if (isRunning || isPaused) {\n      setIsRunning(false);\n      setIsPaused(false);\n      setTotalTime(Math.floor((performance.now() - startTimeRef.current) / 1000));\n      setStartTime(null);\n      startTimeRef.current = null;\n      setShowSummary(true);\n      setDuration(prevDuration => prevDuration);\n    }\n  };\n\n  const handleMute = () => {\n    setIsMuted(!isMuted);\n    // Implement actual audio muting here\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', gap: 2 }}>\n      <BoxComponent\n        isRunning={isRunning}\n        duration={duration}\n        theme={theme}\n        startTime={startTime}\n        isReady={isReady}\n        key={startTime}\n      />\n      <Controls\n        isRunning={isRunning}\n        isPaused={isPaused}\n        isMuted={isMuted}\n        onStart={handleStart}\n        onPause={handlePause}\n        onStop={handleStop}\n        onMute={handleMute}\n        duration={duration}\n        setDuration={setDuration}\n        theme={theme}\n        setTheme={setTheme}\n        music={music}\n        setMusic={setMusic}\n      />\n      {showSummary && (\n        <Summary\n          totalTime={totalTime}\n          breathCount={breathCount}\n          onClose={() => setShowSummary(false)}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default BoxBreathing;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}