{"ast":null,"code":"var _jsxFileName = \"/Users/bc/Documents/box/src/components/Box.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Box as MUIBox, Typography } from '@mui/material';\nimport { styled, keyframes } from '@mui/system';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n    opacity: 0.7;\n  }\n  100% {\n    transform: scale(2.5);\n    opacity: 0;\n  }\n`;\nconst RelaxingText = styled(Typography)(({\n  theme\n}) => ({\n  fontFamily: \"'Playfair Display', serif\",\n  fontSize: '32px',\n  fontStyle: 'italic',\n  opacity: 0,\n  transition: 'opacity 0.5s ease-in-out',\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '100%',\n  textAlign: 'center',\n  color: 'grey',\n  lineHeight: 1.2\n}));\n_c = RelaxingText;\nconst PulsatingDot = styled('div')(({\n  color\n}) => ({\n  width: '26px',\n  height: '26px',\n  backgroundColor: color,\n  position: 'absolute',\n  borderRadius: '50%',\n  display: 'grid',\n  placeItems: 'center',\n  '&::before, &::after': {\n    content: '\"\"',\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    backgroundColor: color,\n    borderRadius: '50%',\n    zIndex: -1,\n    opacity: 0.7\n  },\n  '&::before': {\n    animation: `${pulse} 2s ease-out infinite`\n  },\n  '&::after': {\n    animation: `${pulse} 2s 1s ease-out infinite`\n  }\n}));\n_c2 = PulsatingDot;\nconst PhaseText = styled(Typography)(({\n  theme\n}) => ({\n  fontFamily: \"'Playfair Display', serif\",\n  fontSize: '32px',\n  fontStyle: 'italic',\n  opacity: 0,\n  transition: 'opacity 0.5s ease-in-out',\n  position: 'absolute',\n  top: '40%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '100%',\n  textAlign: 'center'\n}));\n_c3 = PhaseText;\nconst CountdownText = styled(Typography)(({\n  theme\n}) => ({\n  fontFamily: \"'Playfair Display', serif\",\n  fontSize: '24px',\n  fontStyle: 'italic',\n  opacity: 0,\n  transition: 'opacity 0.5s ease-in-out',\n  position: 'absolute',\n  bottom: '30%',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  width: '100%',\n  textAlign: 'center'\n}));\n_c4 = CountdownText;\nconst Box = ({\n  isRunning,\n  duration,\n  theme,\n  startTime,\n  isReady\n}) => {\n  _s();\n  const boxRef = useRef(null);\n  const dotRef = useRef(null);\n  const phaseTextRef = useRef(null);\n  const countdownRef = useRef(null);\n  const readyTextRef = useRef(null);\n  const phases = ['Exhale', 'Hold', 'Inhale', 'Hold'];\n  const points = [{\n    x: 300,\n    y: 0\n  },\n  // A: Upper right\n  {\n    x: 300,\n    y: 300\n  },\n  // B: Lower right\n  {\n    x: 0,\n    y: 300\n  },\n  // C: Lower left\n  {\n    x: 0,\n    y: 0\n  } // D: Upper left\n  ];\n  const getColors = () => {\n    switch (theme) {\n      case 'green-purple':\n        return {\n          color1: '#4CAF50',\n          color2: '#9C27B0'\n        };\n      case 'red-yellow':\n        return {\n          color1: '#FFEB3B',\n          color2: '#F44336'\n        };\n      default:\n        return {\n          color1: '#FF9800',\n          color2: '#2196F3'\n        };\n      // Orange to Blue\n    }\n  };\n  useEffect(() => {\n    if (isReady) {\n      if (readyTextRef.current) {\n        readyTextRef.current.style.opacity = '1';\n        setTimeout(() => {\n          if (readyTextRef.current) {\n            readyTextRef.current.style.opacity = '0';\n          }\n        }, 2000);\n      }\n      if (boxRef.current) {\n        boxRef.current.style.borderColor = getColors().color1;\n      }\n      if (dotRef.current) {\n        dotRef.current.style.left = '287px';\n        dotRef.current.style.top = '-13px';\n        dotRef.current.style.setProperty('--dot-color', getColors().color1);\n      }\n    } else if (isRunning && startTime) {\n      const animate = timestamp => {\n        const elapsedTime = timestamp - startTime;\n        const totalCycleDuration = duration * 4 * 1000;\n        const cycleTime = elapsedTime % totalCycleDuration;\n        const phaseIndex = Math.floor(cycleTime / (duration * 1000));\n        const phaseTime = cycleTime % (duration * 1000);\n        const safePhaseIndex = phaseIndex % 4;\n        const startPoint = points[safePhaseIndex];\n        const endPoint = points[(safePhaseIndex + 1) % 4];\n        if (!startPoint || !endPoint) {\n          console.error('Invalid points:', startPoint, endPoint);\n          return;\n        }\n        const progress = phaseTime / (duration * 1000);\n        const pauseDuration = 200;\n        let adjustedProgress = progress;\n        if (progress < pauseDuration / (duration * 1000)) {\n          adjustedProgress = 0;\n        } else if (progress > 1 - pauseDuration / (duration * 1000)) {\n          adjustedProgress = 1;\n        } else {\n          adjustedProgress = (progress - pauseDuration / (duration * 1000)) / (1 - 2 * pauseDuration / (duration * 1000));\n        }\n        const x = startPoint.x + (endPoint.x - startPoint.x) * adjustedProgress;\n        const y = startPoint.y + (endPoint.y - startPoint.y) * adjustedProgress;\n        const originalSize = 300;\n        const minSize = originalSize * 0.75;\n        let currentSize;\n        if (safePhaseIndex === 0) {\n          currentSize = originalSize - (originalSize - minSize) * adjustedProgress;\n        } else if (safePhaseIndex === 1) {\n          currentSize = minSize;\n        } else if (safePhaseIndex === 2) {\n          currentSize = minSize + (originalSize - minSize) * adjustedProgress;\n        } else {\n          currentSize = originalSize;\n        }\n        if (boxRef.current) {\n          boxRef.current.style.width = `${currentSize}px`;\n          boxRef.current.style.height = `${currentSize}px`;\n        }\n        const scale = currentSize / originalSize;\n        const {\n          color1,\n          color2\n        } = getColors();\n        let color;\n        if (safePhaseIndex === 0) {\n          color = interpolateColor(color1, color2, adjustedProgress);\n        } else if (safePhaseIndex === 1) {\n          color = color2;\n        } else if (safePhaseIndex === 2) {\n          color = interpolateColor(color2, color1, adjustedProgress);\n        } else {\n          color = color1;\n        }\n        if (dotRef.current) {\n          dotRef.current.style.left = `${x * scale - 13}px`;\n          dotRef.current.style.top = `${y * scale - 13}px`;\n          dotRef.current.style.setProperty('--dot-color', color);\n        }\n        if (boxRef.current) {\n          boxRef.current.style.borderColor = color;\n        }\n        if (phaseTextRef.current) {\n          const currentPhase = phases[safePhaseIndex];\n          if (phaseTextRef.current.textContent !== currentPhase) {\n            phaseTextRef.current.style.opacity = '0';\n            setTimeout(() => {\n              if (phaseTextRef.current) {\n                phaseTextRef.current.textContent = currentPhase;\n                phaseTextRef.current.style.opacity = '1';\n                phaseTextRef.current.style.color = color;\n              }\n            }, 250);\n          }\n        }\n        if (countdownRef.current) {\n          const countdown = Math.max(0, Math.ceil((duration * 1000 - phaseTime) / 1000));\n          if (countdownRef.current.textContent !== countdown.toString()) {\n            countdownRef.current.style.opacity = '0';\n            setTimeout(() => {\n              if (countdownRef.current) {\n                countdownRef.current.textContent = countdown;\n                countdownRef.current.style.opacity = '1';\n              }\n            }, 250);\n          }\n        }\n        requestAnimationFrame(animate);\n      };\n      const animationId = requestAnimationFrame(animate);\n      return () => {\n        cancelAnimationFrame(animationId);\n      };\n    } else {\n      if (boxRef.current) {\n        boxRef.current.style.width = '300px';\n        boxRef.current.style.height = '300px';\n      }\n      if (dotRef.current) {\n        dotRef.current.style.left = '287px';\n        dotRef.current.style.top = '-13px';\n        dotRef.current.style.setProperty('--dot-color', getColors().color1);\n      }\n      if (phaseTextRef.current) {\n        phaseTextRef.current.textContent = '';\n        phaseTextRef.current.style.opacity = '0';\n      }\n      if (countdownRef.current) {\n        countdownRef.current.textContent = '';\n        countdownRef.current.style.opacity = '0';\n      }\n    }\n  }, [isRunning, duration, theme, startTime, isReady]);\n  const interpolateColor = (color1, color2, factor) => {\n    const r1 = parseInt(color1.slice(1, 3), 16);\n    const g1 = parseInt(color1.slice(3, 5), 16);\n    const b1 = parseInt(color1.slice(5, 7), 16);\n    const r2 = parseInt(color2.slice(1, 3), 16);\n    const g2 = parseInt(color2.slice(3, 5), 16);\n    const b2 = parseInt(color2.slice(5, 7), 16);\n    const r = Math.round(r1 + factor * (r2 - r1));\n    const g = Math.round(g1 + factor * (g2 - g1));\n    const b = Math.round(b1 + factor * (b2 - b1));\n    return `rgb(${r}, ${g}, ${b})`;\n  };\n  const boxStyle = {\n    width: '100%',\n    height: '100%',\n    border: '2px solid #000',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  };\n  return /*#__PURE__*/_jsxDEV(MUIBox, {\n    sx: {\n      position: 'relative',\n      width: 300,\n      height: 300,\n      margin: '20px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: boxRef,\n      style: boxStyle,\n      children: [/*#__PURE__*/_jsxDEV(PulsatingDot, {\n        ref: dotRef,\n        color: \"var(--dot-color)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PhaseText, {\n        ref: phaseTextRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountdownText, {\n        ref: countdownRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RelaxingText, {\n      ref: readyTextRef,\n      children: [\"Ready\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 14\n      }, this), \"to\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 22\n      }, this), \"exhale\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(Box, \"ri2uZ6Baj3dJNHGPBxZJNzav8WE=\");\n_c5 = Box;\nexport default Box;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"RelaxingText\");\n$RefreshReg$(_c2, \"PulsatingDot\");\n$RefreshReg$(_c3, \"PhaseText\");\n$RefreshReg$(_c4, \"CountdownText\");\n$RefreshReg$(_c5, \"Box\");","map":{"version":3,"names":["React","useEffect","useRef","Box","MUIBox","Typography","styled","keyframes","jsxDEV","_jsxDEV","pulse","RelaxingText","theme","fontFamily","fontSize","fontStyle","opacity","transition","position","top","left","transform","width","textAlign","color","lineHeight","_c","PulsatingDot","height","backgroundColor","borderRadius","display","placeItems","content","zIndex","animation","_c2","PhaseText","_c3","CountdownText","bottom","_c4","isRunning","duration","startTime","isReady","_s","boxRef","dotRef","phaseTextRef","countdownRef","readyTextRef","phases","points","x","y","getColors","color1","color2","current","style","setTimeout","borderColor","setProperty","animate","timestamp","elapsedTime","totalCycleDuration","cycleTime","phaseIndex","Math","floor","phaseTime","safePhaseIndex","startPoint","endPoint","console","error","progress","pauseDuration","adjustedProgress","originalSize","minSize","currentSize","scale","interpolateColor","currentPhase","textContent","countdown","max","ceil","toString","requestAnimationFrame","animationId","cancelAnimationFrame","factor","r1","parseInt","slice","g1","b1","r2","g2","b2","r","round","g","b","boxStyle","border","flexDirection","justifyContent","alignItems","sx","margin","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/bc/Documents/box/src/components/Box.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Box as MUIBox, Typography } from '@mui/material';\nimport { styled, keyframes } from '@mui/system';\n\nconst pulse = keyframes`\n  0% {\n    transform: scale(1);\n    opacity: 0.7;\n  }\n  100% {\n    transform: scale(2.5);\n    opacity: 0;\n  }\n`;\n\nconst RelaxingText = styled(Typography)(({ theme }) => ({\n  fontFamily: \"'Playfair Display', serif\",\n  fontSize: '32px',\n  fontStyle: 'italic',\n  opacity: 0,\n  transition: 'opacity 0.5s ease-in-out',\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '100%',\n  textAlign: 'center',\n  color: 'grey',\n  lineHeight: 1.2,\n}));\n\nconst PulsatingDot = styled('div')(({ color }) => ({\n  width: '26px',\n  height: '26px',\n  backgroundColor: color,\n  position: 'absolute',\n  borderRadius: '50%',\n  display: 'grid',\n  placeItems: 'center',\n  '&::before, &::after': {\n    content: '\"\"',\n    position: 'absolute',\n    height: '100%',\n    width: '100%',\n    backgroundColor: color,\n    borderRadius: '50%',\n    zIndex: -1,\n    opacity: 0.7,\n  },\n  '&::before': {\n    animation: `${pulse} 2s ease-out infinite`,\n  },\n  '&::after': {\n    animation: `${pulse} 2s 1s ease-out infinite`,\n  },\n}));\n\nconst PhaseText = styled(Typography)(({ theme }) => ({\n  fontFamily: \"'Playfair Display', serif\",\n  fontSize: '32px',\n  fontStyle: 'italic',\n  opacity: 0,\n  transition: 'opacity 0.5s ease-in-out',\n  position: 'absolute',\n  top: '40%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: '100%',\n  textAlign: 'center',\n}));\n\nconst CountdownText = styled(Typography)(({ theme }) => ({\n  fontFamily: \"'Playfair Display', serif\",\n  fontSize: '24px',\n  fontStyle: 'italic',\n  opacity: 0,\n  transition: 'opacity 0.5s ease-in-out',\n  position: 'absolute',\n  bottom: '30%',\n  left: '50%',\n  transform: 'translateX(-50%)',\n  width: '100%',\n  textAlign: 'center',\n}));\n\nconst Box = ({ isRunning, duration, theme, startTime, isReady }) => {\n  const boxRef = useRef(null);\n  const dotRef = useRef(null);\n  const phaseTextRef = useRef(null);\n  const countdownRef = useRef(null);\n  const readyTextRef = useRef(null);\n\n  const phases = ['Exhale', 'Hold', 'Inhale', 'Hold'];\n  const points = [\n    { x: 300, y: 0 },   // A: Upper right\n    { x: 300, y: 300 }, // B: Lower right\n    { x: 0, y: 300 },   // C: Lower left\n    { x: 0, y: 0 }      // D: Upper left\n  ];\n\n  const getColors = () => {\n    switch (theme) {\n      case 'green-purple':\n        return { color1: '#4CAF50', color2: '#9C27B0' };\n      case 'red-yellow':\n        return { color1: '#FFEB3B', color2: '#F44336' };\n      default:\n        return { color1: '#FF9800', color2: '#2196F3' }; // Orange to Blue\n    }\n  };\n\n  useEffect(() => {\n    if (isReady) {\n      if (readyTextRef.current) {\n        readyTextRef.current.style.opacity = '1';\n        setTimeout(() => {\n          if (readyTextRef.current) {\n            readyTextRef.current.style.opacity = '0';\n          }\n        }, 2000);\n      }\n      if (boxRef.current) {\n        boxRef.current.style.borderColor = getColors().color1;\n      }\n      if (dotRef.current) {\n        dotRef.current.style.left = '287px';\n        dotRef.current.style.top = '-13px';\n        dotRef.current.style.setProperty('--dot-color', getColors().color1);\n      }\n    } else if (isRunning && startTime) {\n      const animate = (timestamp) => {\n        const elapsedTime = timestamp - startTime;\n        const totalCycleDuration = duration * 4 * 1000;\n        const cycleTime = elapsedTime % totalCycleDuration;\n        const phaseIndex = Math.floor(cycleTime / (duration * 1000));\n        const phaseTime = cycleTime % (duration * 1000);\n\n        const safePhaseIndex = phaseIndex % 4;\n\n        const startPoint = points[safePhaseIndex];\n        const endPoint = points[(safePhaseIndex + 1) % 4];\n\n        if (!startPoint || !endPoint) {\n          console.error('Invalid points:', startPoint, endPoint);\n          return;\n        }\n\n        const progress = phaseTime / (duration * 1000);\n\n        const pauseDuration = 200;\n        let adjustedProgress = progress;\n        if (progress < pauseDuration / (duration * 1000)) {\n          adjustedProgress = 0;\n        } else if (progress > 1 - pauseDuration / (duration * 1000)) {\n          adjustedProgress = 1;\n        } else {\n          adjustedProgress = (progress - pauseDuration / (duration * 1000)) / (1 - 2 * pauseDuration / (duration * 1000));\n        }\n\n        const x = startPoint.x + (endPoint.x - startPoint.x) * adjustedProgress;\n        const y = startPoint.y + (endPoint.y - startPoint.y) * adjustedProgress;\n\n        const originalSize = 300;\n        const minSize = originalSize * 0.75;\n        let currentSize;\n\n        if (safePhaseIndex === 0) {\n          currentSize = originalSize - (originalSize - minSize) * adjustedProgress;\n        } else if (safePhaseIndex === 1) {\n          currentSize = minSize;\n        } else if (safePhaseIndex === 2) {\n          currentSize = minSize + (originalSize - minSize) * adjustedProgress;\n        } else {\n          currentSize = originalSize;\n        }\n\n        if (boxRef.current) {\n          boxRef.current.style.width = `${currentSize}px`;\n          boxRef.current.style.height = `${currentSize}px`;\n        }\n\n        const scale = currentSize / originalSize;\n        const { color1, color2 } = getColors();\n        let color;\n        if (safePhaseIndex === 0) {\n          color = interpolateColor(color1, color2, adjustedProgress);\n        } else if (safePhaseIndex === 1) {\n          color = color2;\n        } else if (safePhaseIndex === 2) {\n          color = interpolateColor(color2, color1, adjustedProgress);\n        } else {\n          color = color1;\n        }\n\n        if (dotRef.current) {\n          dotRef.current.style.left = `${(x * scale) - 13}px`;\n          dotRef.current.style.top = `${(y * scale) - 13}px`;\n          dotRef.current.style.setProperty('--dot-color', color);\n        }\n\n        if (boxRef.current) {\n          boxRef.current.style.borderColor = color;\n        }\n\n        if (phaseTextRef.current) {\n          const currentPhase = phases[safePhaseIndex];\n          if (phaseTextRef.current.textContent !== currentPhase) {\n            phaseTextRef.current.style.opacity = '0';\n            setTimeout(() => {\n              if (phaseTextRef.current) {\n                phaseTextRef.current.textContent = currentPhase;\n                phaseTextRef.current.style.opacity = '1';\n                phaseTextRef.current.style.color = color;\n              }\n            }, 250);\n          }\n        }\n\n        if (countdownRef.current) {\n          const countdown = Math.max(0, Math.ceil((duration * 1000 - phaseTime) / 1000));\n          if (countdownRef.current.textContent !== countdown.toString()) {\n            countdownRef.current.style.opacity = '0';\n            setTimeout(() => {\n              if (countdownRef.current) {\n                countdownRef.current.textContent = countdown;\n                countdownRef.current.style.opacity = '1';\n              }\n            }, 250);\n          }\n        }\n\n        requestAnimationFrame(animate);\n      };\n\n      const animationId = requestAnimationFrame(animate);\n\n      return () => {\n        cancelAnimationFrame(animationId);\n      };\n    } else {\n      if (boxRef.current) {\n        boxRef.current.style.width = '300px';\n        boxRef.current.style.height = '300px';\n      }\n      if (dotRef.current) {\n        dotRef.current.style.left = '287px';\n        dotRef.current.style.top = '-13px';\n        dotRef.current.style.setProperty('--dot-color', getColors().color1);\n      }\n      if (phaseTextRef.current) {\n        phaseTextRef.current.textContent = '';\n        phaseTextRef.current.style.opacity = '0';\n      }\n      if (countdownRef.current) {\n        countdownRef.current.textContent = '';\n        countdownRef.current.style.opacity = '0';\n      }\n    }\n  }, [isRunning, duration, theme, startTime, isReady]);\n\n  const interpolateColor = (color1, color2, factor) => {\n    const r1 = parseInt(color1.slice(1, 3), 16);\n    const g1 = parseInt(color1.slice(3, 5), 16);\n    const b1 = parseInt(color1.slice(5, 7), 16);\n    const r2 = parseInt(color2.slice(1, 3), 16);\n    const g2 = parseInt(color2.slice(3, 5), 16);\n    const b2 = parseInt(color2.slice(5, 7), 16);\n    const r = Math.round(r1 + factor * (r2 - r1));\n    const g = Math.round(g1 + factor * (g2 - g1));\n    const b = Math.round(b1 + factor * (b2 - b1));\n    return `rgb(${r}, ${g}, ${b})`;\n  };\n\n  const boxStyle = {\n    width: '100%',\n    height: '100%',\n    border: '2px solid #000',\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  };\n\n  return (\n    <MUIBox sx={{ position: 'relative', width: 300, height: 300, margin: '20px auto' }}>\n      <div ref={boxRef} style={boxStyle}>\n        <PulsatingDot ref={dotRef} color=\"var(--dot-color)\" />\n        <PhaseText ref={phaseTextRef}></PhaseText>\n        <CountdownText ref={countdownRef}></CountdownText>\n      </div>\n      <RelaxingText ref={readyTextRef}>\n        Ready<br />to<br />exhale\n      </RelaxingText>\n    </MUIBox>\n  );\n};\n\nexport default Box;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}